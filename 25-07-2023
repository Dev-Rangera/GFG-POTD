


/* A binary tree node has data, pointer to left child
   and a pointer to right child  
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
}; */


//Function to return a list containing the level order traversal in spiral form.
vector<int> findSpiral(Node *root)
{
    //Your code here
    stack<Node*> s1;
    stack<Node*> s2;
    vector<int> ans;
    if(root==NULL)
    return ans;
    s1.push(root);
    while(!s1.empty() || !s2.empty())
    {
        while(!s1.empty())
        {
            auto x = s1.top();
            s1.pop();
            ans.push_back(x->data);
            if(x->right)
            s2.push(x->right);
            if(x->left)
            s2.push(x->left);
        }
        while(!s2.empty())
        {
            auto x = s2.top();
            s2.pop();
            ans.push_back(x->data);
            if(x->left)
            s1.push(x->left);
            if(x->right)
            s1.push(x->right);
        }
    }
    return ans;
}
